<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdsoon.modular.system.mapper.SsProDocMapper">
  <resultMap id="BaseResultMap" type="com.sdsoon.modular.system.po.SsProDoc">
    <id column="pro_doc_id" jdbcType="VARCHAR" property="proDocId" />
    <result column="pro_new_doc_name" jdbcType="VARCHAR" property="proNewDocName" />
    <result column="pro_old_doc_name" jdbcType="VARCHAR" property="proOldDocName" />
    <result column="pro_path" jdbcType="VARCHAR" property="proPath" />
    <result column="pro_doc_g_pro_id" jdbcType="VARCHAR" property="proDocGProId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    pro_doc_id, pro_new_doc_name, pro_old_doc_name, pro_path, pro_doc_g_pro_id
  </sql>
  <select id="selectByExample" parameterType="com.sdsoon.modular.system.po.SsProDocExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ss_pro_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ss_pro_doc
    where pro_doc_id = #{proDocId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ss_pro_doc
    where pro_doc_id = #{proDocId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdsoon.modular.system.po.SsProDocExample">
    delete from ss_pro_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdsoon.modular.system.po.SsProDoc">
    insert into ss_pro_doc (pro_doc_id, pro_new_doc_name, pro_old_doc_name, 
      pro_path, pro_doc_g_pro_id)
    values (#{proDocId,jdbcType=VARCHAR}, #{proNewDocName,jdbcType=VARCHAR}, #{proOldDocName,jdbcType=VARCHAR}, 
      #{proPath,jdbcType=VARCHAR}, #{proDocGProId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sdsoon.modular.system.po.SsProDoc">
    insert into ss_pro_doc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="proDocId != null">
        pro_doc_id,
      </if>
      <if test="proNewDocName != null">
        pro_new_doc_name,
      </if>
      <if test="proOldDocName != null">
        pro_old_doc_name,
      </if>
      <if test="proPath != null">
        pro_path,
      </if>
      <if test="proDocGProId != null">
        pro_doc_g_pro_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="proDocId != null">
        #{proDocId,jdbcType=VARCHAR},
      </if>
      <if test="proNewDocName != null">
        #{proNewDocName,jdbcType=VARCHAR},
      </if>
      <if test="proOldDocName != null">
        #{proOldDocName,jdbcType=VARCHAR},
      </if>
      <if test="proPath != null">
        #{proPath,jdbcType=VARCHAR},
      </if>
      <if test="proDocGProId != null">
        #{proDocGProId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdsoon.modular.system.po.SsProDocExample" resultType="java.lang.Long">
    select count(*) from ss_pro_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ss_pro_doc
    <set>
      <if test="record.proDocId != null">
        pro_doc_id = #{record.proDocId,jdbcType=VARCHAR},
      </if>
      <if test="record.proNewDocName != null">
        pro_new_doc_name = #{record.proNewDocName,jdbcType=VARCHAR},
      </if>
      <if test="record.proOldDocName != null">
        pro_old_doc_name = #{record.proOldDocName,jdbcType=VARCHAR},
      </if>
      <if test="record.proPath != null">
        pro_path = #{record.proPath,jdbcType=VARCHAR},
      </if>
      <if test="record.proDocGProId != null">
        pro_doc_g_pro_id = #{record.proDocGProId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ss_pro_doc
    set pro_doc_id = #{record.proDocId,jdbcType=VARCHAR},
      pro_new_doc_name = #{record.proNewDocName,jdbcType=VARCHAR},
      pro_old_doc_name = #{record.proOldDocName,jdbcType=VARCHAR},
      pro_path = #{record.proPath,jdbcType=VARCHAR},
      pro_doc_g_pro_id = #{record.proDocGProId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdsoon.modular.system.po.SsProDoc">
    update ss_pro_doc
    <set>
      <if test="proNewDocName != null">
        pro_new_doc_name = #{proNewDocName,jdbcType=VARCHAR},
      </if>
      <if test="proOldDocName != null">
        pro_old_doc_name = #{proOldDocName,jdbcType=VARCHAR},
      </if>
      <if test="proPath != null">
        pro_path = #{proPath,jdbcType=VARCHAR},
      </if>
      <if test="proDocGProId != null">
        pro_doc_g_pro_id = #{proDocGProId,jdbcType=VARCHAR},
      </if>
    </set>
    where pro_doc_id = #{proDocId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdsoon.modular.system.po.SsProDoc">
    update ss_pro_doc
    set pro_new_doc_name = #{proNewDocName,jdbcType=VARCHAR},
      pro_old_doc_name = #{proOldDocName,jdbcType=VARCHAR},
      pro_path = #{proPath,jdbcType=VARCHAR},
      pro_doc_g_pro_id = #{proDocGProId,jdbcType=VARCHAR}
    where pro_doc_id = #{proDocId,jdbcType=VARCHAR}
  </update>
</mapper>