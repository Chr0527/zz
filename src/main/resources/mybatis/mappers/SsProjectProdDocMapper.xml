<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sdsoon.modular.system.mapper.SsProjectProdDocMapper">
  <resultMap id="BaseResultMap" type="com.sdsoon.modular.system.po.SsProjectProdDoc">
    <id column="prod_doc_id" jdbcType="VARCHAR" property="prodDocId" />
    <result column="prod_doc_old_name" jdbcType="VARCHAR" property="prodDocOldName" />
    <result column="prod_doc_new_name" jdbcType="VARCHAR" property="prodDocNewName" />
    <result column="prod_doc_path" jdbcType="VARCHAR" property="prodDocPath" />
    <result column="prod_g_prod_id" jdbcType="VARCHAR" property="prodGProdId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    prod_doc_id, prod_doc_old_name, prod_doc_new_name, prod_doc_path, prod_g_prod_id
  </sql>
  <select id="selectByExample" parameterType="com.sdsoon.modular.system.po.SsProjectProdDocExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ss_project_prod_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ss_project_prod_doc
    where prod_doc_id = #{prodDocId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from ss_project_prod_doc
    where prod_doc_id = #{prodDocId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.sdsoon.modular.system.po.SsProjectProdDocExample">
    delete from ss_project_prod_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sdsoon.modular.system.po.SsProjectProdDoc">
    insert into ss_project_prod_doc (prod_doc_id, prod_doc_old_name, prod_doc_new_name, 
      prod_doc_path, prod_g_prod_id)
    values (#{prodDocId,jdbcType=VARCHAR}, #{prodDocOldName,jdbcType=VARCHAR}, #{prodDocNewName,jdbcType=VARCHAR}, 
      #{prodDocPath,jdbcType=VARCHAR}, #{prodGProdId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sdsoon.modular.system.po.SsProjectProdDoc">
    insert into ss_project_prod_doc
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="prodDocId != null">
        prod_doc_id,
      </if>
      <if test="prodDocOldName != null">
        prod_doc_old_name,
      </if>
      <if test="prodDocNewName != null">
        prod_doc_new_name,
      </if>
      <if test="prodDocPath != null">
        prod_doc_path,
      </if>
      <if test="prodGProdId != null">
        prod_g_prod_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="prodDocId != null">
        #{prodDocId,jdbcType=VARCHAR},
      </if>
      <if test="prodDocOldName != null">
        #{prodDocOldName,jdbcType=VARCHAR},
      </if>
      <if test="prodDocNewName != null">
        #{prodDocNewName,jdbcType=VARCHAR},
      </if>
      <if test="prodDocPath != null">
        #{prodDocPath,jdbcType=VARCHAR},
      </if>
      <if test="prodGProdId != null">
        #{prodGProdId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sdsoon.modular.system.po.SsProjectProdDocExample" resultType="java.lang.Long">
    select count(*) from ss_project_prod_doc
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ss_project_prod_doc
    <set>
      <if test="record.prodDocId != null">
        prod_doc_id = #{record.prodDocId,jdbcType=VARCHAR},
      </if>
      <if test="record.prodDocOldName != null">
        prod_doc_old_name = #{record.prodDocOldName,jdbcType=VARCHAR},
      </if>
      <if test="record.prodDocNewName != null">
        prod_doc_new_name = #{record.prodDocNewName,jdbcType=VARCHAR},
      </if>
      <if test="record.prodDocPath != null">
        prod_doc_path = #{record.prodDocPath,jdbcType=VARCHAR},
      </if>
      <if test="record.prodGProdId != null">
        prod_g_prod_id = #{record.prodGProdId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ss_project_prod_doc
    set prod_doc_id = #{record.prodDocId,jdbcType=VARCHAR},
      prod_doc_old_name = #{record.prodDocOldName,jdbcType=VARCHAR},
      prod_doc_new_name = #{record.prodDocNewName,jdbcType=VARCHAR},
      prod_doc_path = #{record.prodDocPath,jdbcType=VARCHAR},
      prod_g_prod_id = #{record.prodGProdId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sdsoon.modular.system.po.SsProjectProdDoc">
    update ss_project_prod_doc
    <set>
      <if test="prodDocOldName != null">
        prod_doc_old_name = #{prodDocOldName,jdbcType=VARCHAR},
      </if>
      <if test="prodDocNewName != null">
        prod_doc_new_name = #{prodDocNewName,jdbcType=VARCHAR},
      </if>
      <if test="prodDocPath != null">
        prod_doc_path = #{prodDocPath,jdbcType=VARCHAR},
      </if>
      <if test="prodGProdId != null">
        prod_g_prod_id = #{prodGProdId,jdbcType=VARCHAR},
      </if>
    </set>
    where prod_doc_id = #{prodDocId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sdsoon.modular.system.po.SsProjectProdDoc">
    update ss_project_prod_doc
    set prod_doc_old_name = #{prodDocOldName,jdbcType=VARCHAR},
      prod_doc_new_name = #{prodDocNewName,jdbcType=VARCHAR},
      prod_doc_path = #{prodDocPath,jdbcType=VARCHAR},
      prod_g_prod_id = #{prodGProdId,jdbcType=VARCHAR}
    where prod_doc_id = #{prodDocId,jdbcType=VARCHAR}
  </update>
</mapper>